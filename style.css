body {
  font-family: 'Arial', sans-serif;
  text-align: center;
  background: linear-gradient(135deg, #74ebd5, #acb6e5);
  background-size: 400% 400%;
  animation: gradientBG 10s ease infinite;
  color: #333;
  margin: 0;
  padding: 0;
}

@keyframes gradientBG {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.game-container {
  max-width: 600px;
  margin: 50px auto;
  padding: 20px;
  background: #ffffff;
  border-radius: 15px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  animation: fadeIn 1s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

h1 {
  color: #444;
  font-size: 2.5rem;
  margin-bottom: 10px;
}

.instructions {
  margin-bottom: 20px;
  background: #f9f9f9;
  padding: 15px;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.instructions ul {
  text-align: left;
  margin: 10px auto;
  max-width: 400px;
}

.choices {
  margin: 20px 0;
}

.choice {
  font-size: 18px;
  padding: 10px 20px;
  margin: 5px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  background-color: #007bff;
  color: white;
  transition: background-color 0.3s, transform 0.2s;
}

.choice:hover {
  background-color: #0056b3;
  transform: scale(1.1);
}

.choice:active {
  animation: flash 0.3s ease;
}

@keyframes flash {
  0% { background-color: #ffcccb; }
  50% { background-color: #ff6666; }
  100% { background-color: #ffcccb; }
}

.result, .scoreboard, .final-result {
  margin-top: 20px;
  font-size: 18px;
}

.result p, .scoreboard p {
  margin: 10px 0;
}

.scoreboard {
  background: #f1f1f1;
  padding: 10px;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

#restart-game {
  padding: 10px 20px;
  font-size: 16px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.2s;
}

#restart-game:hover {
  background-color: #0056b3;
  transform: scale(1.1);
}

.final-result {
  background: #ffe4e1;
  padding: 15px;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Style pour l'Ã©cran de victoire */
.final-result {
  display: none;
  text-align: center;
  margin-top: 20px;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  animation: fadeIn 1s ease-in-out;
}

.final-result h2 {
  font-size: 2rem;
  margin-bottom: 10px;
}

.final-result p {
  font-size: 1.2rem;
  margin-bottom: 20px;
}

.final-result.winner {
  background-color: #d4edda;
  color: #155724;
  border: 2px solid #c3e6cb;
}

.final-result.loser {
  background-color: #f8d7da;
  color: #721c24;
  border: 2px solid #f5c6cb;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Style pour le pop-up */
.popup {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  z-index: 1000;
  width: 80%;
  max-width: 400px;
  text-align: center;
  animation: fadeIn 0.5s ease-in-out;
}

/* Animation pour le pop-up */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translate(-50%, -60%);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%);
  }
}

/* Fond sombre derriÃ¨re le pop-up */
.popup-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 999;
  display: none;
}

// Variables globales
const choices = document.querySelectorAll(".choice");
const userChoiceDisplay = document.getElementById("user-choice");
const computerChoiceDisplay = document.getElementById("computer-choice");
const winnerDisplay = document.getElementById("winner");
const userScoreDisplay = document.getElementById("user-score");
const computerScoreDisplay = document.getElementById("computer-score");
const finalResult = document.querySelector(".final-result");
const finalWinnerDisplay = document.getElementById("final-winner");
const restartButton = document.getElementById("restart-game");

let userScore = 0;
let computerScore = 0;
let gameOver = false;

// Fonction pour attacher les Ã©vÃ©nements aux boutons
choices.forEach(choice => {
  choice.addEventListener("click", () => {
    if (gameOver) return;

    const userChoice = choice.getAttribute("data-choice");
    const computerChoice = getComputerChoice();
    const winner = determineWinner(userChoice, computerChoice);

    // Mise Ã  jour des affichages
    userChoiceDisplay.textContent = `Votre choix : ${userChoice}`;
    computerChoiceDisplay.textContent = `Choix de Mosta AI : ${computerChoice}`;
    winnerDisplay.textContent = `RÃ©sultat : ${winner}`;

    // Mise Ã  jour des scores
    updateScores(winner);
    checkFinalWinner();
  });
});

// Fonction pour obtenir un choix alÃ©atoire pour Mosta AI
function getComputerChoice() {
  const options = ["chameau", "camembert", "patate"];
  return options[Math.floor(Math.random() * options.length)];
}

// Fonction pour dÃ©terminer le gagnant
function determineWinner(userChoice, computerChoice) {
  if (userChoice === computerChoice) {
    return "Ã‰galitÃ© !";
  }
  if (
    (userChoice === "chameau" && computerChoice === "patate") ||
    (userChoice === "camembert" && computerChoice === "chameau") ||
    (userChoice === "patate" && computerChoice === "camembert")
  ) {
    return "Vous avez gagnÃ© ! ðŸŽ‰";
  }
  return "Mosta AI a gagnÃ© ! ðŸ˜¢";
}

// Fonction pour mettre Ã  jour les scores
function updateScores(winner) {
  if (winner.includes("Vous")) {
    userScore++;
    userScoreDisplay.textContent = userScore;
  } else if (winner.includes("Mosta AI")) {
    computerScore++;
    computerScoreDisplay.textContent = computerScore;
  }
}

// Fonction pour vÃ©rifier le gagnant final
function checkFinalWinner() {
  if (userScore === 5 || computerScore === 5) {
    gameOver = true;
    finalResult.style.display = "block";
    if (userScore === 5) {
      finalWinnerDisplay.innerHTML = `
        <div style="text-align: center;">
          <h2 style="color: green; font-size: 2rem; font-weight: bold;">ðŸŽ‰ FÃ©licitations ! ðŸŽ‰</h2>
          <p style="font-size: 1.2rem;">Vous Ãªtes le grand gagnant !</p>
          <p style="font-size: 1rem; color: #555;">Rejouez pour tenter de battre Mosta AI Ã  nouveau.</p>
        </div>`;
    } else {
      finalWinnerDisplay.innerHTML = `
        <div style="text-align: center;">
          <h2 style="color: red; font-size: 2rem; font-weight: bold;">ðŸ˜¢ Dommage ! ðŸ˜¢</h2>
          <p style="font-size: 1.2rem;">Mosta AI a remportÃ© la partie.</p>
          <p style="font-size: 1rem; color: #555;">Rejouez pour tenter votre chance !</p>
        </div>`;
    }
  }
}

// Fonction pour redÃ©marrer le jeu
restartButton.addEventListener("click", () => {
  userScore = 0;
  computerScore = 0;
  gameOver = false;
  userScoreDisplay.textContent = 0;
  computerScoreDisplay.textContent = 0;
  finalResult.style.display = "none";
  winnerDisplay.textContent = "";
  userChoiceDisplay.textContent = "Votre choix : ";
  computerChoiceDisplay.textContent = "Choix de Mosta AI : ";
});